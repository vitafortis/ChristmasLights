// -alpha_dither no -dither  -non_opaque_image_format ARGB8888 -opaque_image_format RGB565 0xd805880c
// Generated by imageconverter. Please, do not edit!

#include <touchgfx/Bitmap.hpp>
#include <BitmapDatabase.hpp>

#ifndef NO_USING_NAMESPACE_TOUCHGFX
using namespace touchgfx;
#endif

extern const unsigned char _background[]; 
extern const unsigned char _circle_outline[]; 
extern const unsigned char _colorwheel[]; 
extern const unsigned char _slider_background_vertical[]; 
extern const unsigned char _slider_background_vertical_filled[]; 
extern const unsigned char _slider_knob_circle[]; 

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { _background, 0, 480, 272, 0, 0, 480, 272, touchgfx::Bitmap::RGB565 },
    { _circle_outline, 0, 981, 980, 926, 357, 37, 265, touchgfx::Bitmap::ARGB8888 },
    { _colorwheel, 0, 270, 270, 29, 50, 212, 168, touchgfx::Bitmap::ARGB8888 },
    { _slider_background_vertical, 0, 6, 166, 0, 3, 6, 160, touchgfx::Bitmap::ARGB8888 },
    { _slider_background_vertical_filled, 0, 6, 166, 0, 2, 6, 162, touchgfx::Bitmap::ARGB8888 },
    { _slider_knob_circle, 0, 35, 35, 11, 10, 13, 15, touchgfx::Bitmap::ARGB8888 }
};

namespace BitmapDatabase
{
  const touchgfx::Bitmap::BitmapData* getInstance()
  {
    return bitmap_database;
  }
  uint16_t getInstanceSize()
  {
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
  }
}

